<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.frame.dao.basicdatas.ParSuppliersSizeMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.frame.entity.basicdatas.ParSuppliersSize" >
    <id column="temp_par_suppliers_size_size_id" property="sizeId" jdbcType="VARCHAR" />
    <result column="temp_par_suppliers_size_size_name" property="sizeName" jdbcType="VARCHAR" />
    <result column="temp_par_suppliers_size_size_code" property="sizeCode" jdbcType="VARCHAR" />
    <result column="temp_par_suppliers_size_enabled" property="enabled" jdbcType="CHAR" />
    <result column="temp_par_suppliers_size_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_par_suppliers_size_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_par_suppliers_size_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_par_suppliers_size_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_par_suppliers_size_update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_par_suppliers_size.size_id as temp_par_suppliers_size_size_id, temp_par_suppliers_size.size_name as temp_par_suppliers_size_size_name, 
    temp_par_suppliers_size.size_code as temp_par_suppliers_size_size_code, temp_par_suppliers_size.enabled as temp_par_suppliers_size_enabled, 
    temp_par_suppliers_size.remark as temp_par_suppliers_size_remark, temp_par_suppliers_size.creater as temp_par_suppliers_size_creater, 
    temp_par_suppliers_size.create_time as temp_par_suppliers_size_create_time, temp_par_suppliers_size.updater as temp_par_suppliers_size_updater, 
    temp_par_suppliers_size.update_time as temp_par_suppliers_size_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.frame.entity.basicdatas.ParSuppliersSizeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_par_suppliers_size temp_par_suppliers_size
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_par_suppliers_size temp_par_suppliers_size
    where temp_par_suppliers_size.size_id = #{sizeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_par_suppliers_size
    where size_id = #{sizeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.frame.entity.basicdatas.ParSuppliersSizeExample" >
    delete from t_par_suppliers_size temp_par_suppliers_size
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.frame.entity.basicdatas.ParSuppliersSize" >
    insert into t_par_suppliers_size (size_id, size_name, size_code, 
      enabled, remark, creater, 
      create_time, updater, update_time
      )
    values (#{sizeId,jdbcType=VARCHAR}, #{sizeName,jdbcType=VARCHAR}, #{sizeCode,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.frame.entity.basicdatas.ParSuppliersSize" >
    insert into t_par_suppliers_size
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sizeId != null" >
        size_id,
      </if>
      <if test="sizeName != null" >
        size_name,
      </if>
      <if test="sizeCode != null" >
        size_code,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sizeId != null" >
        #{sizeId,jdbcType=VARCHAR},
      </if>
      <if test="sizeName != null" >
        #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="sizeCode != null" >
        #{sizeCode,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.frame.entity.basicdatas.ParSuppliersSizeExample" resultType="java.lang.Integer" >
    select count(*) from t_par_suppliers_size temp_par_suppliers_size
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_par_suppliers_size temp_par_suppliers_size
    <set >
      <if test="record.sizeId != null" >
        temp_par_suppliers_size.size_id = #{record.sizeId,jdbcType=VARCHAR},
      </if>
      <if test="record.sizeName != null" >
        temp_par_suppliers_size.size_name = #{record.sizeName,jdbcType=VARCHAR},
      </if>
      <if test="record.sizeCode != null" >
        temp_par_suppliers_size.size_code = #{record.sizeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        temp_par_suppliers_size.enabled = #{record.enabled,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        temp_par_suppliers_size.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_par_suppliers_size.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_par_suppliers_size.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_par_suppliers_size.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_par_suppliers_size.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_par_suppliers_size temp_par_suppliers_size
    set temp_par_suppliers_size.size_id = #{record.sizeId,jdbcType=VARCHAR},
      temp_par_suppliers_size.size_name = #{record.sizeName,jdbcType=VARCHAR},
      temp_par_suppliers_size.size_code = #{record.sizeCode,jdbcType=VARCHAR},
      temp_par_suppliers_size.enabled = #{record.enabled,jdbcType=CHAR},
      temp_par_suppliers_size.remark = #{record.remark,jdbcType=VARCHAR},
      temp_par_suppliers_size.creater = #{record.creater,jdbcType=VARCHAR},
      temp_par_suppliers_size.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_par_suppliers_size.updater = #{record.updater,jdbcType=VARCHAR},
      temp_par_suppliers_size.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.frame.entity.basicdatas.ParSuppliersSize" >
    update t_par_suppliers_size
    <set >
      <if test="sizeName != null" >
        size_name = #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="sizeCode != null" >
        size_code = #{sizeCode,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where size_id = #{sizeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.frame.entity.basicdatas.ParSuppliersSize" >
    update t_par_suppliers_size
    set size_name = #{sizeName,jdbcType=VARCHAR},
      size_code = #{sizeCode,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where size_id = #{sizeId,jdbcType=VARCHAR}
  </update>
</mapper>